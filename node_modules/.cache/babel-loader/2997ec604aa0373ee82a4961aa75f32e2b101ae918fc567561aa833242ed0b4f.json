{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst useFetchAPI = url => {\n  _s();\n  const [data, setData] = useState(null); // Changed default to null\n  const [loading, setLoading] = useState(true); // Added loading state\n  const [error, setError] = useState(null); // Added error state\n\n  useEffect(() => {\n    const controller = new AbortController(); // For request cancellation\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(url, {\n          signal: controller.signal\n        });\n        w;\n        setData(response.data);\n        setError(null); // Clear previous error\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          console.log(\"Request cancelled\", err.message);\n        } else {\n          setError(err);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n    return () => controller.abort(); // Cleanup\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  }; // Return structured data\n};\n_s(useFetchAPI, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\nexport default useFetchAPI;","map":{"version":3,"names":["useState","useEffect","axios","useFetchAPI","url","_s","data","setData","loading","setLoading","error","setError","controller","AbortController","fetchData","response","get","signal","w","err","isCancel","console","log","message","abort"],"sources":["/Users/sumith/Desktop/ReactJS/React_Hook_Practise/src/CUSTOM_HOOKS/fetchDataFromApi.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useFetchAPI = (url) => {\n  const [data, setData] = useState(null);         // Changed default to null\n  const [loading, setLoading] = useState(true);   // Added loading state\n  const [error, setError] = useState(null);       // Added error state\n\n  useEffect(() => {\n    const controller = new AbortController();      // For request cancellation\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(url, { signal: controller.signal });\n        w\n        setData(response.data);\n        setError(null);                            // Clear previous error\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          console.log(\"Request cancelled\", err.message);\n        } else {\n          setError(err);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n\n    return () => controller.abort();              // Cleanup\n  }, [url]);\n\n  return { data, loading, error };                // Return structured data\n};\n\nexport default useFetchAPI;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAS;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAG;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAO;;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC,CAAC,CAAM;IAC/C,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFL,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMM,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACZ,GAAG,EAAE;UAAEa,MAAM,EAAEL,UAAU,CAACK;QAAO,CAAC,CAAC;QACpEC,CAAC;QACDX,OAAO,CAACQ,QAAQ,CAACT,IAAI,CAAC;QACtBK,QAAQ,CAAC,IAAI,CAAC,CAAC,CAA4B;MAC7C,CAAC,CAAC,OAAOQ,GAAG,EAAE;QACZ,IAAIjB,KAAK,CAACkB,QAAQ,CAACD,GAAG,CAAC,EAAE;UACvBE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,GAAG,CAACI,OAAO,CAAC;QAC/C,CAAC,MAAM;UACLZ,QAAQ,CAACQ,GAAG,CAAC;QACf;MACF,CAAC,SAAS;QACRV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,SAAS,CAAC,CAAC;IAEX,OAAO,MAAMF,UAAU,CAACY,KAAK,CAAC,CAAC,CAAC,CAAc;EAChD,CAAC,EAAE,CAACpB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC,CAAC,CAAgB;AAClD,CAAC;AAACL,EAAA,CA/BIF,WAAW;AAiCjB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}